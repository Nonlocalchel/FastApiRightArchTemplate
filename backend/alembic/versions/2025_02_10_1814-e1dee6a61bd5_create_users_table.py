"""create users table

Revision ID: e1dee6a61bd5
Revises:
Create Date: 2025-02-10 18:14:12.621774

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e1dee6a61bd5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("foo", sa.Integer(), nullable=False))
    op.add_column("users", sa.Column("bar", sa.Integer(), nullable=False))
    op.drop_constraint("users_username_key", "users", type_="unique")
    op.create_unique_constraint(
        op.f("uq_users_foo_bar"), "users", ["foo", "bar"]
    )
    op.create_unique_constraint(
        op.f("uq_users_username"), "users", ["username"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_username"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_foo_bar"), "users", type_="unique")
    op.create_unique_constraint("users_username_key", "users", ["username"])
    op.drop_column("users", "bar")
    op.drop_column("users", "foo")
    # ### end Alembic commands ###
